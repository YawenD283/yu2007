# The expected performance by chance for 2*2, 3*3, and 4*4 Condition are all 1/4
combined_data <- combined_data %>%
mutate(chance_level = case_when(
Condition == "Condition1" ~ 0.25,
Condition == "Condition2" ~ 0.25,
Condition == "Condition3" ~ 0.25
))
library(pwr)
library(jsonlite)
library(dplyr)
library(ggplot2)
library(effectsize)
library(car)
library(tidyr)
setwd("/Users/yawendong/Documents/GitHub/psych final project/pilotB_data/Condition1")
files1 <- list.files(pattern = "\\.csv$")
data1 <- lapply(files1, read.csv) %>% bind_rows()
setwd("/Users/yawendong/Documents/GitHub/psych final project/pilotB_data/Condition2")
files2 <- list.files(pattern = "\\.csv$")
data2 <- lapply(files2, read.csv) %>% bind_rows()
setwd("/Users/yawendong/Documents/GitHub/psych final project/pilotB_data/Condition3")
files3 <- list.files(pattern = "\\.csv$")
data3 <- lapply(files3, read.csv) %>% bind_rows()
selected_data1 <- data1 %>% select(correct_choice, correct_image, response_letter, correct, response_time)
cleaned_data1 <- na.omit(selected_data1)
cleaned_data1$correct <- as.logical(cleaned_data1$correct)
selected_data2 <- data2 %>% select(correct_choice, correct_image, response_letter, correct, response_time)
cleaned_data2 <- na.omit(selected_data2)
cleaned_data2$correct <- as.logical(cleaned_data2$correct)
selected_data3 <- data3 %>% select(correct_choice, correct_image, response_letter, correct, response_time)
cleaned_data3 <- na.omit(selected_data3)
cleaned_data3$correct <- as.logical(cleaned_data3$correct)
cleaned_data1$Condition <- 'Condition1'
cleaned_data2$Condition <- 'Condition2'
cleaned_data3$Condition <- 'Condition3'
combined_data <- bind_rows(cleaned_data1, cleaned_data2, cleaned_data3)
accuracy <- combined_data %>%
group_by(Condition) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
print(accuracy)
accuracy_by_image <- combined_data %>%
group_by(Condition, correct_image) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
ggplot(accuracy_by_image, aes(x = correct_image, y = Accuracy, group = Condition, color = Condition)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Accuracy by Image for Each Condition",
x = "Image",
y = "Accuracy"
) +
scale_x_continuous(breaks = unique(accuracy_by_image$correct_image)) +
facet_wrap(~Condition, scales = "free_x", ncol = 1)+
theme_minimal()
reaction_time <- combined_data %>%
group_by(Condition) %>%
summarise(
Mean_ReactionTime = mean(response_time),
SD_ReactionTime = sd(response_time),
.groups = 'drop'
)
print(reaction_time)
reaction_time_by_image <- combined_data %>%
group_by(Condition, correct_image) %>%
summarise(
Mean_ReactionTime = mean(response_time, na.rm = TRUE),
.groups = 'drop'
)
ggplot(reaction_time_by_image, aes(x = correct_image,
y = Mean_ReactionTime,
group = Condition,
color = Condition)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Reaction Times by Image for Each Condition",
x = "Image",
y = "Mean Reaction Time (ms)"
) +
scale_x_continuous(breaks = unique(reaction_time_by_image$correct_image)) +
facet_wrap(~Condition, scales = "free_x", ncol = 1) +
theme_minimal()
# The expected performance by chance for 2*2, 3*3, and 4*4 Condition are all 1/4
combined_data <- combined_data %>%
mutate(chance_level = case_when(
Condition == "Condition1" ~ 0.25,
Condition == "Condition2" ~ 0.25,
Condition == "Condition3" ~ 0.25
))
t_test_results <- combined_data %>%
group_by(Condition) %>%
summarise(
t_test_p_value = t.test(correct, mu = unique(chance_level))$p.value,
.groups = 'drop'
)
print(t_test_results)
anova <- aov(correct ~ Condition, data = combined_data)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(dplyr)
library(ggplot2)
library(effectsize)
library(car)
library(tidyr)
setwd("/Users/yawendong/Documents/GitHub/psych final project/pilotB_data/Condition1")
files1 <- list.files(pattern = "\\.csv$")
data1 <- lapply(files1, read.csv) %>% bind_rows()
setwd("/Users/yawendong/Documents/GitHub/psych final project/pilotB_data/Condition2")
files2 <- list.files(pattern = "\\.csv$")
data2 <- lapply(files2, read.csv) %>% bind_rows()
setwd("/Users/yawendong/Documents/GitHub/psych final project/pilotB_data/Condition3")
files3 <- list.files(pattern = "\\.csv$")
data3 <- lapply(files3, read.csv) %>% bind_rows()
selected_data1 <- data1 %>% select(correct_choice, correct_image, response_letter, correct, response_time)
cleaned_data1 <- na.omit(selected_data1)
cleaned_data1$correct <- as.logical(cleaned_data1$correct)
selected_data2 <- data2 %>% select(correct_choice, correct_image, response_letter, correct, response_time)
cleaned_data2 <- na.omit(selected_data2)
cleaned_data2$correct <- as.logical(cleaned_data2$correct)
selected_data3 <- data3 %>% select(correct_choice, correct_image, response_letter, correct, response_time)
cleaned_data3 <- na.omit(selected_data3)
cleaned_data3$correct <- as.logical(cleaned_data3$correct)
cleaned_data1$Condition <- 'Condition1'
cleaned_data2$Condition <- 'Condition2'
cleaned_data3$Condition <- 'Condition3'
combined_data <- bind_rows(cleaned_data1, cleaned_data2, cleaned_data3)
accuracy <- combined_data %>%
group_by(Condition) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
print(accuracy)
accuracy_by_image <- combined_data %>%
group_by(Condition, correct_image) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
ggplot(accuracy_by_image, aes(x = correct_image, y = Accuracy, group = Condition, color = Condition)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Accuracy by Image for Each Condition",
x = "Image",
y = "Accuracy"
) +
scale_x_continuous(breaks = unique(accuracy_by_image$correct_image)) +
facet_wrap(~Condition, scales = "free_x", ncol = 1)+
theme_minimal()
reaction_time <- combined_data %>%
group_by(Condition) %>%
summarise(
Mean_ReactionTime = mean(response_time),
SD_ReactionTime = sd(response_time),
.groups = 'drop'
)
print(reaction_time)
reaction_time_by_image <- combined_data %>%
group_by(Condition, correct_image) %>%
summarise(
Mean_ReactionTime = mean(response_time, na.rm = TRUE),
.groups = 'drop'
)
ggplot(reaction_time_by_image, aes(x = correct_image,
y = Mean_ReactionTime,
group = Condition,
color = Condition)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Reaction Times by Image for Each Condition",
x = "Image",
y = "Mean Reaction Time (ms)"
) +
scale_x_continuous(breaks = unique(reaction_time_by_image$correct_image)) +
facet_wrap(~Condition, scales = "free_x", ncol = 1) +
theme_minimal()
# The expected performance by chance for 2*2, 3*3, and 4*4 Condition are all 1/4
combined_data <- combined_data %>%
mutate(chance_level = case_when(
Condition == "Condition1" ~ 0.25,
Condition == "Condition2" ~ 0.25,
Condition == "Condition3" ~ 0.25
))
t_test_results <- combined_data %>%
group_by(Condition) %>%
summarise(
t_test_p_value = t.test(correct, mu = unique(chance_level))$p.value,
.groups = 'drop'
)
print(t_test_results)
anova <- aov(correct ~ Condition, data = combined_data)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
